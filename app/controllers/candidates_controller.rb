class CandidatesController < ApplicationController
  require 'uk_postcode'
  require 'json'
  require 'open-uri'
  require 'twitter'

  POLICY_AREAS = [ 'The NHS', 'Economy and taxes', 'Immigration', 'Benefits and pensions', 'Law and order', 'Environment' ]
  PARTY_CONSTANTS = { 
    'Conservative Party' => { 
      'The NHS' => [ [ 'Spend extra £2bn on frontline health services.', 'http://www.bbc.co.uk/news/uk-politics-30265833' ], [ 'Make GPs available seven days a week by 2020. Recruit 5,000 more doctors.', 'https://www.conservatives.com/SecuringABetterFuture/GoodServices.aspx' ] ],
      'Economy and taxes' => [ [ 'Secure budget surplus by 2019-20. Instead of raising taxes, cut spending, while increasing NHS spending.', 'http://press.conservatives.com/post/98719492085/george-osborne-speech-to-conservative-party' ], [ 'Cut income tax of 30 million people by 2020. Raise tax-free income allowance and limit for 40px tax rate.' ] ],
      'Immigration' => [ [ 'Require European jobseekers to leave if they are unemployed after 6 months. Renegotiate the rules for free movement within the EU. Make migrants wait 4 years before claiming certain benefits or social housing.', 'http://press.conservatives.com/post/103802921280/david-cameron-speech-on-immigration' ], [ 'Lower annual net immigration to below 100,000 (currently 243,00).', 'https://www.conservatives.com/Plan/CapWelfareReduceImmigration.aspx' ] ],
      'Benefits and pensions' => [ [ 'Cut the maximum a household can claim yearly from £26,000 to £23,000. Require young people to participate in "community projects" after six months on Jobseeker\'s Allowance. Freeze increases of benefits for working-age people for two years, to save £3bn.', 'http://press.conservatives.com/post/108155759640/david-cameron-britain-living-within-its-means' ] ],
      'Law and order' => [ [ 'Replace Human Rights Act with Bill of Rights to give power to UK courts. New laws to make it easier to collect information about internet activity of suspected criminals. Introduce special orders for groups inciting hatred, and to stop public speech of "disruptive" individuals.', 'http://press.conservatives.com/post/98799073410/theresa-may-speech-to-conservative-party' ] ],
      'Environment' => 'For conservatives, the environment is very important',
      'party_image_uri' => '/assets/party_conservative.png'
    },
    'Labour Party' => {
      'The NHS' => [ [ 'Commit extra £4.5bn to NHS.', 'http://www.nlmanagedservices.co.uk/extra-funding-for-nhs/' ], [ 'Ensure that patients get GP appointment within 48 hours. End "creeping privatisation" of the NHS. Integrate health and social services into "whole-person care".', 'http://www.labour.org.uk/issues/detail/gp-48-hour-guarantee' ] ],
      'Economy and taxes' => [ [ 'Get budget into surplus and national debt falling in next parliament, with spending cuts and tax changes.', 'http://www.edballs.co.uk/blog/?p=5733' ], ["Reintroduce 50p top rate of income tax for earnings over £150,000, and 10p rate for 24 million people. Tax \"mansions\" and bankers' bonuses. Freeze energy prices and rail fares until 2017.", 'http://press.labour.org.uk/post/74420740121/ed-balls-announces-binding-fiscal-commitment-that' ] ],
      'Immigration' => [ ['Reduce low-skilled migration with "smarter targets", while ensuring university students and high-skilled workers can migrate. Establish stronger border control to reduce illegal immigration, with "proper" entry and exit checks. Increase fines for employing illegal immigrants, and outlaw employment agencies recruiting only abroad.', 'http://press.labour.org.uk/post/98301589749/speech-by-yvette-cooper-mp-to-labours-annual' ] ],
      'Benefits and pensions' => [ [ 'Increase minimum wage to £8-an-hour by 2020. Repeal the "bedroom tax".', 'http://www.labour.org.uk/issues/detail/social-security' ], [ 'Double the length of paid paternity leave, and increase statutory paternity pay to £260 a week.', 'http://www.bbc.co.uk/news/uk-politics-31253409' ] ],
      'Law and order' => [ [ 'Give local residents say in crime fighting priorities. Spend more money on frontline policing to prevent reduction in officer numbers. To combat extremism, bring back Control Orders and Prevent strategy.', 'http://www.labour.org.uk/issues/detail/crime-and-policing' ] ],
      'Environment' => 'For labour, the environment is very important',
      'party_image_uri' => '/assets/party_labour.png'
    },
    'Liberal Democrats' => { 
      'The NHS' => [ [ 'Increase spending on NHS rises in line with growth of the economy, funded by increasing capital tax on high earners. Half of extra spending targeted at mental health. Ensure therapy is available within 18 weeks.', 'http://www.libdems.org.uk/mental-health-stigma' ] ],
      'Economy and taxes' => [ [ 'Eliminate budget deficit by 2018, with spending cuts and tax changes. Raise tax-free income allowance to £12,500.', 'http://www.libdems.org.uk/liberal_democrats_will_raise_tax_free_allowance_in_the_first_year_of_the_next_parliament' ], [ 'Create "mansion tax" on property worth £3m, and capital gains tax on profits from second homes and shares.', 'http://www.libdems.org.uk/get_the_facts_mansion_tax' ] ],
      'Immigration' => [ [ 'Reintroduce exit checks at UK borders, so the government can identify people overstaying their visa. Mandate people on unemployment benefits to take an English test, and require those who fail to attend English classes.', 'http://www.libdems.org.uk/nick_clegg_s_immigration_speech' ] ],
      'Benefits and pensions' => [ [ 'No Winter Fuel Payment and free TV license for pensioners with high earnings. Rather than direct sanctions, introduce a "yellow card" system to deal with benefit claimants that break the rules.', 'http://www.libdemvoice.org/steve-webb-lib-dems-will-introduce-fair-warning-for-jobseekers-who-break-benefit-rules-before-sanctions-imposed-42030.html' ] ],
      'Law and order' => [ [ 'Instead of prison sentences for drug possession, give non-custodial sentencs and medical treatment. Pass a Digital Bill of Rights to protect people from unwarranted intrusion and grant them more control over their own data. Make police in some areas wear body cameras to make \'stop and search\' more accountable.', 'http://www.libdems.org.uk/protecting_your_privacy_online_with_a_digital_bill_of_rights' ] ],
      'Environment' => 'For libdems, the environment is very important',
      'party_image_uri' => '/assets/party_libdem.png'
    },
    'Green Party' => {
      'The NHS' => [ [ 'Divert funding form centralised facilities to community healthcare, prevention and health promotion. End privatisation and prescription charges, and create medicines agency that sets drug prices. Ensure NHS funding through earmarked NHS tax.', 'http://policy.greenparty.org.uk/he.html' ] ],
      'Economy and taxes' => [ [ 'Renationalise railways and energy companies.', 'http://greenparty.org.uk/news/2013/02/11/renationalise-rail-says-green-party-leader/' ], [ "Set up citizen's income, an unconditional benefit for basic needs. Stop banks from being able to create new money. Work to end dependency on economic growth.", 'http://policy.greenparty.org.uk/ec.html' ] ],
      'Immigration' => [ [ 'Reduce UK immigration controls over time. Migrants illegally in the UK for over five years will be allowed to remain unless they pose a serious danger to public safety.', 'http://policy.greenparty.org.uk/mg.html' ], [ 'Increase legal rights of asylum seekers.', 'http://policy.greenparty.org.uk/ra.html' ] ],
      'Benefits and pensions' => [ [ 'Reform benefit system with Citizen\'s income, an unconditional fixed money transfer.', 'http://greenparty.org.uk/news/2014/11/03/green-party-condemns-three-pronged-government-attack-on-sick-and-disabled/' ], [ 'Before that, ban zero hours contracts, stop current work capability assessments, and restore the level of the former disability living allowance.', 'http://policy.greenparty.org.uk/ec.html' ] ],
      'Law and order' => [ [ 'Decriminalise cannabis and prostitution. Eemove prison sentences for possession of other drugs. Ensure terror suspects have same legal rights as those suspected of other crimes.', 'http://policy.greenparty.org.uk/rr.html' ] ],
      'Environment' => 'For greens, the environment is very important',
      'party_image_uri' => '/assets/party_green.png'
    },
    'UK Independence Party (UKIP)' => {
      'The NHS' => [ [ 'Extra £3bn to NHS, funded by quitting EU and "middle management" cuts. Keep NHS free "at point of delivery". Require migrants who have not been in UK for five years to have private medical insurance. Bring back state-enrolled nurses and return powers to matrons.', 'http://www.ukip.org/ukip_pledge_an_extra_3_billion_for_the_nhs' ] ],
      'Economy and taxes' => [ [ 'Increase tax-free personal allowance to £13,500, and reduce tax paid at above £42,000. Abolish inheritance tax, and set up turnover tax on large businesses. Cut the foreign aid budget adn EU membership fees.', 'http://www.ukip.org/policies_for_people' ] ],
      'Immigration' => [ [ 'Choose immigrants based on a system of points, reflecting skills needed for work in the country. Apply points system to both EU and non-EU immigrants. Reduce net immigration to 50,000 people a year. Make language skill tests for residence permits harder.', 'http://www.ukip.org/steven_woolfe_ukip_s_ethical_migration_policy' ], [ 'People who currently are in the UK legally would not be deported, were the UK to leave the EU.', '' ] ],
      'Benefits and pensions' => [ [ 'No child benefit for children after the second one, or for children outside of Britain. Repeal the "bedroom tax", as it is unfair. No permanent residence for migrants that are unable to support themselves for at least five years.', 'http://www.ukip.org/policies_for_people' ] ],
      'Law and order' => [ [ 'Replace the Human Rights Act with UK Bill of Rights, and withdraw from European Arrest Warrant, that coordinates extradition of criminals between European countries. No votes for prisoners, and as a rule prison sentences should be served in their full length.', 'http://www.ukip.org/policies_for_people' ] ],
      'Environment' => 'For ukip, the environment is very important',
      'party_image_uri' => '/assets/party_ukip.png'
    },
    'Scottish National Party' => {
      'The NHS' => [ [ 'For Scottish NHS, increase yearly spending on NHS by more than inflation. Reduce number of senior managers by 25%. Streamline the work of health boards.', 'http://votesnp.com/campaigns/SNP_Manifesto_2011_lowRes.pdf' ] ],
      'Economy and taxes' => [ [ 'Create an international bank tax and limits to industry bonuses. Invest in offshore wind farms.', 'http://www.snp.org/?q=media-centre/news/2014/nov/uk-government-needs-invest-offshore-wind' ], [ 'No to oil drilling and fracking beneath homes, as in the Infrastructure Bill.', 'http://www.snp.org/?q=media-centre/news/2014/aug/westminsters-gung-ho-fracking-plans-condemnedo' ] ],
      'Immigration' => [ [ 'Give the devolved Scottish government control over immigration to Scotland. Use a Canadian-style "earned citizenship system" to attract high-skilled workers.', '' ] ],
      'Benefits and pensions' => [ [ 'In 2010, SNP opposed cuts to in-work benefits, and supported extending paternity leave. It suggested a maximum combined withdrawal rate for benefits, and reforms in employment support allowance and cold weather payments.', 'http://www.politicsresources.net/area/uk/ge10/man/parties/SNP.pdf' ] ],
      'Law and order' => 'No information about SNP and law and order yet',
      'Environment' => 'For SNP, the environment is very important',
    },
    'Plaid Cymru' => {
      'The NHS' => [ [ 'For Welsh NHS, recruit 1,000 extra doctors over two terms of government. Offer incentives, improved education, and international recruitment to employ doctors to areas and specilisations where there are shortages.', 'http://www.partyof.wales/uploads/1000_doctors_PDF_Eng_.pdf' ] ],
      'Economy and taxes' => [ [ 'Set living wage as minimum wage. Establish publicly owned energy companies, a business investment bank, and higher education focused on green energy. Devolve power over institutions such as the Bank of England.', 'http://www.english.plaidcymru.org/uploads/Articles_and_reports/Greenprint_Cynllun_Gwyrdd.pdf' ] ],
      'Immigration' => [ [ 'Opposes a choice of immigrants following a "point-based system", as it would not reflect Welsh needs. Asylum seekers should be able to work in Wales while waiting for their status decision. UK government should close "detention centres".', 'http://www.partyof.wales/our-vision-for-a-better-society/?force=1' ] ],
      'Benefits and pensions' => [ [ 'Move away from complex and expensive means testing for child-related benefits. Introduce a living pension for those aged 80 and over.', 'http://www.partyof.wales/our-vision-for-a-better-society/?force=1' ] ],
      'Law and order' => [ [ 'Replace Anti-Social Behaviour Orders with restorative justice. Create a Welsh Youth Justice Board. Encourage a debate on future of drug enforcement laws.', 'http://www.plaid.cymru/g_downloads/2011-06-13-29-2-safer-communities.pdf' ] ],
      'Environment' => 'For plaid cymru, the environment is very important',
    },
    'Default' => {
      'The NHS' => 'No information about NHS for this party yet',
      'Economy and taxes' => 'No information about economic policy for this party yet',
      'Immigration' => 'No information about immigration for this party yet',
      'Benefits and pensions' => 'No information about benefits and pensions for this party yet',
      'Law and order' => 'No information about law and order for this party yet',
      'Environment' => 'No information about environment yet'
    }
  }

  TWITTER_LISTS = {
    66101 => "aberavon",
    66085 => "aberconwy",
    14398 => "aberdeen-north",
    14399 => "aberdeen-south",
    14400 => "airdrie-and-shotts",
    65730 => "aldershot",
    65773 => "aldridge-brownhills",
    65892 => "altrincham-and-sale-west",
    66103 => "alyn-and-deeside",
    65809 => "amber-valley",
    14401 => "angus",
    66108 => "arfon",
    14402 => "argyll-and-bute",
    65784 => "arundel-and-south-downs",
    65895 => "ashfield",
    65811 => "ashford",
    66056 => "ashton-under-lyne",
    65739 => "aylesbury",
    14403 => "ayr-carrick-and-cumnock",
    66008 => "banbury",
    14404 => "banff-and-buchan",
    65662 => "barking",
    65665 => "barnsley-central",
    66012 => "barnsley-east",
    66006 => "barrow-and-furness",
    65898 => "basildon-and-billericay",
    65623 => "basingstoke",
    65711 => "bassetlaw",
    65798 => "bath",
    65751 => "batley-and-spen",
    65731 => "battersea",
    65687 => "beaconsfield",
    65725 => "beckenham",
    65561 => "bedford",
    66124 => "belfast-east",
    66125 => "belfast-north",
    66126 => "belfast-south",
    66127 => "belfast-west",
    65689 => "bermondsey-and-old-southw",
    65726 => "berwick-upon-tweed",
    14405 => "berwickshire-roxburgh-and",
    65853 => "bethnal-green-and-bow",
    65934 => "beverley-and-holderness",
    65845 => "bexhill-and-battle",
    65611 => "bexleyheath-and-crayford",
    65581 => "birkenhead",
    65931 => "birmingham-edgbaston",
    65667 => "birmingham-erdington",
    65597 => "birmingham-hall-green",
    66072 => "birmingham-hodge-hill",
    65989 => "birmingham-ladywood",
    65966 => "birmingham-northfield",
    66028 => "birmingham-perry-barr",
    65804 => "birmingham-selly-oak",
    65707 => "birmingham-yardley",
    65820 => "bishop-auckland",
    65981 => "blackburn",
    65583 => "blackley-and-broughton",
    65750 => "blackpool-n-and-cleveleys",
    65679 => "blackpool-south",
    66093 => "blaenau-gwent",
    65805 => "blaydon",
    65753 => "blyth-valley",
    65841 => "bognor-regis-and-littleha",
    65628 => "bolsover",
    65646 => "bolton-north-east",
    65712 => "bolton-south-east",
    65738 => "bolton-west",
    65821 => "bootle",
    65969 => "boston-and-skegness",
    66071 => "bosworth",
    65993 => "bournemouth-east",
    65933 => "bournemouth-west",
    65697 => "bracknell",
    65694 => "bradford-east",
    65995 => "bradford-s",
    66036 => "bradford-w",
    65670 => "braintree",
    66088 => "brecon-and-radnorshire",
    66065 => "brent-central",
    65595 => "brent-n",
    65958 => "brentford-and-isleworth",
    65685 => "brentwood-and-ongar",
    66095 => "bridgend",
    65620 => "bridgwater-and-w-somerset",
    66000 => "brigg-and-goole",
    65844 => "brighton-kemptown",
    65787 => "brighton-pavilion",
    65839 => "bristol-e",
    66009 => "bristol-n-w",
    66031 => "bristol-s",
    65574 => "bristol-w",
    65852 => "broadland",
    65954 => "bromley-and-chislehurst",
    65617 => "bromsgrove",
    65639 => "broxbourne",
    65849 => "broxtowe",
    65909 => "buckingham",
    65846 => "burnley",
    65708 => "burton",
    66015 => "bury-n",
    65975 => "bury-s",
    66035 => "bury-st-edmunds",
    66106 => "caerphilly",
    14406 => "caithness-sutherland-and",
    65906 => "calder-valley",
    65913 => "camberwell-and-peckham",
    65826 => "camborne-and-redruth",
    65927 => "cambridge",
    65790 => "cannock-chase",
    65878 => "canterbury",
    66090 => "cardiff-central",
    66120 => "cardiff-n",
    66119 => "cardiff-s-and-penarth",
    66114 => "cardiff-w",
    65929 => "carlisle",
    66089 => "carmarthen-e-and-dinefwr",
    66109 => "carmarthen-w-and-s-pembro",
    65972 => "carshalton-and-wallington",
    65914 => "castle-point",
    14407 => "central-ayrshire",
    65749 => "central-devon",
    65748 => "central-suffolk-and-n-ips",
    66110 => "ceredigion",
    65615 => "charnwood",
    66075 => "chatham-and-aylesford",
    65727 => "cheadle",
    65797 => "chelmsford",
    65818 => "chelsea-and-fulham",
    65946 => "cheltenham",
    65801 => "chesham-and-amersham",
    65980 => "chesterfield",
    65558 => "chichester",
    65721 => "chingford-and-woodford-gr",
    65940 => "chippenham",
    65886 => "chipping-barnet",
    65792 => "chorley",
    65885 => "christchurch",
    65759 => "cities-of-london-and-west",
    65734 => "city-of-chester",
    66021 => "city-of-durham",
    66030 => "clacton",
    66057 => "cleethorpes",
    66121 => "clwyd-s",
    66100 => "clwyd-w",
    14408 => "coatbridge-chryston-and-b",
    65926 => "colchester",
    65835 => "colne-valley",
    65771 => "congleton",
    65893 => "copeland",
    65590 => "corby",
    65636 => "coventry-n-e",
    65575 => "coventry-n-w",
    65877 => "coventry-s",
    65781 => "crawley",
    65572 => "crewe-and-nantwich",
    65603 => "croydon-central",
    65867 => "croydon-n",
    65923 => "croydon-s",
    14409 => "cumbernauld-kilsyth-and-k",
    66105 => "cynon-valley",
    65985 => "dagenham-and-rainham",
    65802 => "darlington",
    66011 => "dartford",
    66025 => "daventry",
    66112 => "delyn",
    65924 => "denton-and-reddish",
    66070 => "derby-n",
    65863 => "derby-s",
    65799 => "derbyshire-dales",
    65723 => "devizes",
    65746 => "dewsbury",
    65553 => "don-valley",
    65621 => "doncaster-central",
    65672 => "doncaster-n",
    65555 => "dover",
    65806 => "dudley-n",
    66054 => "dudley-s",
    65808 => "dulwich-and-w-norwood",
    14410 => "dumfries-and-galloway",
    14411 => "dumfriesshire-clydesdale",
    14412 => "dundee-e",
    14413 => "dundee-w",
    14414 => "dunfermline-and-w-fife",
    66096 => "dwyfor-meirionnydd",
    66128 => "e-antrim",
    65813 => "e-devon",
    14415 => "e-dunbartonshire",
    65573 => "e-ham",
    65569 => "e-hampshire",
    14416 => "e-kilbride-strathaven-and",
    66129 => "e-londonderry",
    14417 => "e-lothian",
    14418 => "e-renfrewshire",
    65856 => "e-surrey",
    65780 => "e-worthing-and-shoreham",
    65979 => "e-yorkshire",
    65755 => "ealing-central-and-acton",
    65701 => "ealing-n",
    65794 => "ealing-southall",
    65823 => "easington",
    65714 => "eastbourne",
    65881 => "eastleigh",
    65756 => "eddisbury",
    14419 => "edinburgh-e",
    14420 => "edinburgh-n-and-leith",
    14422 => "edinburgh-s-w",
    14421 => "edinburgh-s",
    14423 => "edinburgh-w",
    65570 => "edmonton",
    65991 => "ellesmere-port-and-neston",
    65677 => "elmet-and-rothwell",
    65816 => "eltham",
    66050 => "enfield-n",
    65567 => "enfield-southgate",
    66044 => "epping-forest",
    65803 => "epsom-and-ewell",
    65743 => "erewash",
    66023 => "erith-and-thamesmead",
    66062 => "esher-and-walton",
    66033 => "exeter",
    14424 => "falkirk",
    65857 => "fareham",
    65764 => "faversham-and-mid-kent",
    65655 => "feltham-and-heston",
    66130 => "fermanagh-and-s-tyrone",
    65865 => "filton-and-bradley-stoke",
    65938 => "finchley-and-golders-gree",
    65779 => "folkestone-and-hythe",
    66064 => "forest-of-dean",
    66131 => "foyle",
    65955 => "fylde",
    65952 => "gainsborough",
    65900 => "garston-and-halewood",
    65870 => "gateshead",
    65551 => "gedling",
    65864 => "gillingham-and-rainham",
    14425 => "glasgow-central",
    14426 => "glasgow-e",
    14428 => "glasgow-n-e",
    14429 => "glasgow-n-w",
    14427 => "glasgow-n",
    14431 => "glasgow-s-w",
    14430 => "glasgow-s",
    14432 => "glenrothes",
    65996 => "gloucester",
    14433 => "gordon",
    65928 => "gosport",
    66083 => "gower",
    65683 => "grantham-and-stamford",
    65944 => "gravesham",
    65600 => "great-grimsby",
    65627 => "great-yarmouth",
    65837 => "greenwich-and-woolwich",
    65838 => "guildford",
    65550 => "hackney-n-and-stoke-newin",
    65752 => "hackney-s-and-shoreditch",
    65971 => "halesowen-and-rowley-regi",
    65599 => "halifax",
    65671 => "haltemprice-and-howden",
    65915 => "halton",
    65836 => "hammersmith",
    65576 => "hampstead-and-kilburn",
    65675 => "harborough",
    65875 => "harlow",
    65578 => "harrogate-and-knaresborou",
    65650 => "harrow-e",
    65796 => "harrow-w",
    65990 => "hartlepool",
    65674 => "harwich-and-n-essex",
    65640 => "hastings-and-rye",
    65699 => "havant",
    65912 => "hayes-and-harlington",
    65557 => "hazel-grove",
    65967 => "hemel-hempstead",
    66018 => "hemsworth",
    65754 => "hendon",
    65786 => "henley",
    65582 => "hereford-and-s-herefordsh",
    66003 => "hertford-and-stortford",
    65994 => "hertsmere",
    65850 => "hexham",
    65814 => "heywood-and-middleton",
    66052 => "high-peak",
    65724 => "hitchin-and-harpenden",
    65824 => "holborn-and-st-pancras",
    66069 => "hornchurch-and-upminster",
    65883 => "hornsey-and-wood-green",
    65717 => "horsham",
    65947 => "houghton-and-sunderland-s",
    65691 => "hove",
    65624 => "huddersfield",
    65592 => "huntingdon",
    65899 => "hyndburn",
    65630 => "ilford-n",
    65585 => "ilford-s",
    14434 => "inverclyde",
    14435 => "inverness-nairn-badenoch",
    65925 => "ipswich",
    65791 => "isle-of-wight",
    65937 => "islington-n",
    65882 => "islington-s-and-finsbury",
    66097 => "islwyn",
    66026 => "jarrow",
    65871 => "keighley",
    65968 => "kenilworth-and-southam",
    65939 => "kensington",
    66001 => "kettering",
    14436 => "kilmarnock-and-loudoun",
    65778 => "kingston-and-surbiton",
    65709 => "kingston-upon-hull-e",
    65618 => "kingston-upon-hull-n",
    65984 => "kingston-upon-hull-w-and",
    66053 => "kingswood",
    14437 => "kirkcaldy-and-cowdenbeath",
    65869 => "knowsley",
    66132 => "lagan-valley",
    14438 => "lanark-and-hamilton-e",
    65568 => "lancaster-and-fleetwood",
    65765 => "leeds-central",
    65941 => "leeds-e",
    65866 => "leeds-n-e",
    66068 => "leeds-n-w",
    65988 => "leeds-w",
    65807 => "leicester-e",
    65604 => "leicester-s",
    65587 => "leicester-w",
    65978 => "leigh",
    66020 => "lewes",
    66041 => "lewisham-deptford",
    65705 => "lewisham-e",
    65616 => "lewisham-w-and-penge",
    66013 => "leyton-and-wanstead",
    66046 => "lichfield",
    65704 => "lincoln",
    14439 => "linlithgow-and-e-falkirk",
    66066 => "liverpool-riverside",
    65766 => "liverpool-w-derby",
    65970 => "liverpool-walton",
    65644 => "liverpool-wavertree",
    14440 => "livingston",
    66117 => "llanelli",
    65785 => "loughborough",
    65987 => "louth-and-horncastle",
    65690 => "ludlow",
    65887 => "luton-n",
    66080 => "luton-s",
    65896 => "macclesfield",
    65901 => "maidenhead",
    65936 => "maidstone-and-the-weald",
    65645 => "makerfield",
    65661 => "maldon",
    66048 => "manchester-central",
    65834 => "manchester-gorton",
    65819 => "manchester-withington",
    65647 => "mansfield",
    65772 => "meon-valley",
    65932 => "meriden",
    66086 => "merthyr-tydfil-and-rhymne",
    65718 => "mid-bedfordshire",
    66007 => "mid-derbyshire",
    66061 => "mid-dorset-and-n-poole",
    65949 => "mid-norfolk",
    65999 => "mid-sussex",
    66133 => "mid-ulster",
    65888 => "mid-worcestershire",
    65657 => "middlesbrough-s-and-e-cle",
    65998 => "middlesbrough",
    14441 => "midlothian",
    65953 => "milton-keynes-n",
    66076 => "milton-keynes-s",
    66038 => "mitcham-and-morden",
    65693 => "mole-valley",
    66084 => "monmouth",
    66111 => "montgomeryshire",
    14442 => "moray",
    65633 => "morecambe-and-lunesdale",
    65735 => "morley-and-outwood",
    14443 => "motherwell-and-wishaw",
    66135 => "n-antrim",
    14445 => "n-ayrshire-and-arran",
    65602 => "n-cornwall",
    65658 => "n-devon",
    65702 => "n-dorset",
    66136 => "n-down",
    65745 => "n-durham",
    65855 => "n-e-bedfordshire",
    66063 => "n-e-cambridgeshire",
    65676 => "n-e-derbyshire",
    14446 => "n-e-fife",
    65729 => "n-e-hampshire",
    65840 => "n-e-hertfordshire",
    65619 => "n-e-somerset",
    65642 => "n-herefordshire",
    65872 => "n-norfolk",
    66017 => "n-shropshire",
    65817 => "n-somerset",
    65760 => "n-swindon",
    65605 => "n-thanet",
    65720 => "n-tyneside",
    65565 => "n-w-cambridgeshire",
    65859 => "n-w-durham",
    65894 => "n-w-hampshire",
    65776 => "n-w-leicestershire",
    65713 => "n-w-norfolk",
    66024 => "n-warwickshire",
    65822 => "n-wiltshire",
    14444 => "na-h-eileanan-an-iar",
    66082 => "neath",
    65556 => "new-forest-e",
    65815 => "new-forest-w",
    65696 => "newark",
    65862 => "newbury",
    65861 => "newcastle-under-lyme",
    66055 => "newcastle-upon-tyne-centr",
    65594 => "newcastle-upon-tyne-e",
    65664 => "newcastle-upon-tyne-n",
    66094 => "newport-e",
    66099 => "newport-w",
    66134 => "newry-and-armagh",
    65828 => "newton-abbot",
    65918 => "normanton-pontefract-and",
    66059 => "northampton-n",
    65910 => "northampton-s",
    65768 => "norwich-n",
    65634 => "norwich-s",
    65559 => "nottingham-e",
    65643 => "nottingham-n",
    65945 => "nottingham-s",
    65663 => "nuneaton",
    14447 => "ochil-and-s-perthshire",
    66107 => "ogmore",
    65653 => "old-bexley-and-sidcup",
    65903 => "oldham-e-and-saddleworth",
    66022 => "oldham-w-and-royton",
    14448 => "orkney-and-shetland",
    65682 => "orpington",
    66060 => "oxford-e",
    65564 => "oxford-w-and-abingdon",
    14449 => "paisley-and-renfrew-n",
    14450 => "paisley-and-renfrew-s",
    65668 => "pendle",
    66002 => "penistone-and-stocksbridg",
    66081 => "penrith-and-the-border",
    14451 => "perth-and-n-perthshire",
    65649 => "peterborough",
    65974 => "plymouth-moor-view",
    65737 => "plymouth-sutton-and-devon",
    66087 => "pontypridd",
    65860 => "poole",
    65917 => "poplar-and-limehouse",
    65566 => "portsmouth-n",
    66014 => "portsmouth-s",
    66102 => "preseli-pembrokeshire",
    65673 => "preston",
    65637 => "pudsey",
    66045 => "putney",
    65795 => "rayleigh-and-wickford",
    65973 => "reading-e",
    65982 => "reading-w",
    66032 => "redcar",
    65700 => "redditch",
    66005 => "reigate",
    66092 => "rhondda",
    65579 => "ribble-valley",
    65598 => "richmond-park",
    65722 => "richmond-yorks",
    65843 => "rochdale",
    66043 => "rochester-and-strood",
    65584 => "rochford-and-southend-e",
    66077 => "romford",
    65884 => "romsey-and-southampton-n",
    14452 => "ross-skye-and-lochaber",
    66019 => "rossendale-and-darwen",
    65930 => "rother-valley",
    66029 => "rotherham",
    65656 => "rugby",
    65681 => "ruislip-northwood-and-pin",
    65589 => "runnymede-and-weybridge",
    65736 => "rushcliffe",
    14453 => "rutherglen-and-hamilton-w",
    65833 => "rutland-and-melton",
    66137 => "s-antrim",
    65962 => "s-basildon-and-e-thurrock",
    65922 => "s-cambridgeshire",
    65762 => "s-derbyshire",
    65788 => "s-dorset",
    66138 => "s-down",
    65997 => "s-e-cambridgeshire",
    65684 => "s-e-cornwall",
    66051 => "s-holland-and-the-deeping",
    66034 => "s-leicestershire",
    65666 => "s-norfolk",
    65902 => "s-northamptonshire",
    65951 => "s-ribble",
    65719 => "s-shields",
    65943 => "s-staffordshire",
    65614 => "s-suffolk",
    65800 => "s-swindon",
    65829 => "s-thanet",
    65848 => "s-w-bedfordshire",
    65775 => "s-w-devon",
    65596 => "s-w-hertfordshire",
    65652 => "s-w-norfolk",
    65678 => "s-w-surrey",
    65956 => "s-w-wiltshire",
    65654 => "saffron-walden",
    65688 => "salford-and-eccles",
    65889 => "salisbury",
    65891 => "scarborough-and-whitby",
    66027 => "scunthorpe",
    65763 => "sedgefield",
    65706 => "sefton-central",
    65842 => "selby-and-ainsty",
    65698 => "sevenoaks",
    65601 => "sheffield-brightside-and",
    65957 => "sheffield-central",
    65741 => "sheffield-hallam",
    65549 => "sheffield-heeley",
    65793 => "sheffield-s-e",
    65632 => "sherwood",
    65959 => "shipley",
    65563 => "shrewsbury-and-atcham",
    65610 => "sittingbourne-and-sheppey",
    65986 => "skipton-and-ripon",
    65920 => "sleaford-and-n-hykeham",
    65680 => "slough",
    65879 => "solihull",
    65812 => "somerton-and-frome",
    66016 => "southampton-itchen",
    65580 => "southampton-test",
    65876 => "southend-w",
    65728 => "southport",
    65942 => "spelthorne",
    65715 => "st-albans",
    65591 => "st-austell-and-newquay",
    66073 => "st-helens-n",
    65732 => "st-helens-s-and-whiston",
    65854 => "st-ives",
    66067 => "stafford",
    65907 => "staffordshire-moorlands",
    65960 => "stalybridge-and-hyde",
    65571 => "stevenage",
    14454 => "stirling",
    65606 => "stockport",
    65641 => "stockton-n",
    65908 => "stockton-s",
    65710 => "stoke-on-trent-central",
    65783 => "stoke-on-trent-n",
    65770 => "stoke-on-trent-s",
    65950 => "stone",
    65609 => "stourbridge",
    66139 => "strangford",
    65648 => "stratford-on-avon",
    66042 => "streatham",
    65911 => "stretford-and-urmston",
    65858 => "stroud",
    65607 => "suffolk-coastal",
    65586 => "sunderland-central",
    65747 => "surrey-heath",
    66040 => "sutton-and-cheam",
    65703 => "sutton-coldfield",
    66091 => "swansea-e",
    66118 => "swansea-w",
    65880 => "tamworth",
    65964 => "tatton",
    65767 => "taunton-deane",
    65992 => "telford",
    65976 => "tewkesbury",
    65789 => "the-cotswolds",
    65977 => "the-wrekin",
    65686 => "thirsk-and-malton",
    65905 => "thornbury-and-yate",
    65919 => "thurrock",
    65761 => "tiverton-and-honiton",
    65744 => "tonbridge-and-malling",
    65554 => "tooting",
    65692 => "torbay",
    66104 => "torfaen",
    65904 => "torridge-and-w-devon",
    65810 => "totnes",
    66074 => "tottenham",
    65659 => "truro-and-falmouth",
    65660 => "tunbridge-wells",
    65782 => "twickenham",
    65868 => "tynemouth",
    66140 => "upper-bann",
    65613 => "uxbridge-and-s-ruislip",
    66116 => "vale-of-clwyd",
    66098 => "vale-of-glamorgan",
    65825 => "vauxhall",
    14455 => "w-aberdeenshire-and-kinca",
    65983 => "w-bromwich-e",
    66047 => "w-bromwich-west",
    65716 => "w-dorset",
    14456 => "w-dunbartonshire",
    66058 => "w-ham",
    65873 => "w-lancashire",
    65629 => "w-suffolk",
    66141 => "w-tyrone",
    65758 => "w-worcestershire",
    65733 => "wakefield",
    65635 => "wallasey",
    65890 => "walsall-n",
    65832 => "walsall-s",
    65651 => "walthamstow",
    65631 => "wansbeck",
    65638 => "wantage",
    66079 => "warley",
    65874 => "warrington-n",
    65916 => "warrington-s",
    65608 => "warwick-and-leamington",
    66049 => "washington-and-sunderland",
    65626 => "watford",
    66004 => "waveney",
    65961 => "wealden",
    65769 => "weaver-vale",
    65830 => "wellingborough",
    65560 => "wells",
    65740 => "welwyn-hatfield",
    65588 => "wentworth-and-dearne",
    65851 => "westminster-n",
    65963 => "westmorland-and-lonsdale",
    65742 => "weston-super-mare",
    65612 => "wigan",
    65827 => "wimbledon",
    65921 => "winchester",
    65552 => "windsor",
    65847 => "wirral-s",
    65897 => "wirral-w",
    65831 => "witham",
    65622 => "witney",
    66039 => "woking",
    65774 => "wokingham",
    65777 => "wolverhampton-n-e",
    65593 => "wolverhampton-s-e",
    65948 => "wolverhampton-s-w",
    65577 => "worcester",
    65625 => "workington",
    65757 => "worsley-and-eccles-s",
    65562 => "worthing-w",
    66113 => "wrexham",
    66010 => "wycombe",
    65695 => "wyre-and-preston-n",
    66078 => "wyre-forest",
    65669 => "wythenshawe-and-sale-e",
    65935 => "yeovil",
    66115 => "ynys-mon",
    65965 => "york-central",
    66037 => "york-outer"
  }

  def getConstituency(postcode)
    pc = UKPostcode.new(postcode)
    if not pc.valid?
      return false
    end
    uri = 'http://mapit.mysociety.org/postcode/'+pc.outcode+pc.incode
    jsondata = open(uri)
    return JSON.load(jsondata)
  end

  def getMPid(candidate)
    # Is the best way to check this to look at the public whip identifier?
    for ide in candidate['identifiers']
      if ide['scheme'] == 'uk.org.publicwhip'
        # return numbers from end of the string
        return /[0-9]+$/.match(ide['identifier'])[0]
      end
    end
    return nil
  end

  def getPolicy(candidate, policyArea)
    party = candidate['party_memberships']['2015']['name']
    if not PARTY_CONSTANTS.key?(party)
      party = 'Default'
    end
    return PARTY_CONSTANTS[party][policyArea]
  end

  def getAllPolicies(candidates)
    policies = Hash.new
    for candidate in candidates
      policies[candidate['id']] = Hash.new
      for policy in POLICY_AREAS
        policies[candidate['id']][policy] = getPolicy(candidate, policy)
      end
    end
    return policies
  end

  def getImageUrl(candidate, twitter_obj)
    if candidate['image']
      return candidate['image']
    end
    if candidate['twitter_username'].length > 2
      begin
        twitter_user = twitter_obj.user(candidate['twitter_username'])
      rescue Twitter::Error::NotFound
        candidate['twitter_username'] = ''
        return nil
      end
      twitter_profile_uri = twitter_user.profile_image_uri.to_s.sub("_normal", "")
      if not twitter_profile_uri =~ /default_profile_images/
        return twitter_profile_uri
      end
    end
  end

  def getCandidates(constituencyId)
    uri = 'http://yournextmp.popit.mysociety.org/api/v0.1/posts/'+constituencyId.to_s+'?embed=membership.person'
    twitter_client = Twitter::REST::Client.new do |config|
      config.consumer_key = 'vzUdH63VDtZX1AQiUNBPpL0Sj'
      config.consumer_secret = 'gosJYtqmDduobc4QWVo4xL56ykro1sBvQlVbZVnuHwkxhwZFVd'
      config.access_token = '3006172181-DiGGfRtjGyHvwpl1k8jaR4o3uPEW2GQRdZwLwB0'
      config.access_token_secret = 'MCmGUPGi4jpMZS7795FRGp6JXdtDKwNr8EedbMzUY4JOA'
    end
    c = Twitter::REST::Client.new do |config|
      config.consumer_key = '8m0D3VLDUjCMTREtMsQ6WKWQC'
      config.consumer_secret = 'XcEtBqAI6TTEwiwgRMwTSpEG2CN4jZnh8FxaC9XDKaKeKvVFma'
      config.access_token = '3006172181-etu5wtNStpIAdc6SnkmBZGMkqJ65Y03qpcrQdW4'
      config.access_token_secret = 'ClyV9cs4ETf5o3S49fwVm9UwFGZiORNKOla5AJaM8Jnz7'
    end

    jsondata = open(uri)
    @data = JSON.load(jsondata)
    @candidates = []
    for cand in @data['result']['memberships']
      @currentConstituency = cand['person_id']['versions'][0]['data']['standing_in']['2015']
      if @currentConstituency and @currentConstituency['post_id'] == constituencyId.to_s
        # merge to make sure versions[0][data] is easily accessible in object - not ideal!
        @candidates.concat([cand['person_id']['versions'][0]['data'].merge(cand['person_id'])])
      end
    end
    # For some reason there are duplicates in the JSON
    @candidates = @candidates.uniq
    for i in @candidates.each_index()
      @candidates[i]['image_url'] = getImageUrl(@candidates[i], twitter_client)
      @candidates[i]['party'] = @candidates[i]['party_memberships']['2015']['name']
      if PARTY_CONSTANTS[@candidates[i]['party']]
        @candidates[i]['party_image_uri'] = PARTY_CONSTANTS[@candidates[i]['party']]['party_image_uri']
      else
        @candidates[i]['party_image_uri'] = nil
      end
      @candidates[i]['MPid'] = getMPid(@candidates[i])
    end
    return @candidates
  end

  def getCandidateById(id)
    uri = 'http://yournextmp.popit.mysociety.org/api/v0.1/search/persons?q=id:'+id.to_s
    jsondata = open(uri)
    @data = JSON.load(jsondata)
    return @data['result'][0]
  end

  def index
    @q = request['q']
    @condata = getConstituency(@q)
    if not @condata
      # flash[:alert] = "Invalid post code, please try again"
      redirect_to "/?error" and return
    end
    @conId = @condata['shortcuts']['WMC']
    @constituency = @condata['areas'][@conId.to_s]
    @twitter_list = TWITTER_LISTS[@conId]
    @candidates = getCandidates(@conId)
    @policies = getAllPolicies(@candidates)
    @PARTY_CONSTANTS = PARTY_CONSTANTS
  end

  def show
    @candidate = getCandidateById(request['id'])
  end
end
